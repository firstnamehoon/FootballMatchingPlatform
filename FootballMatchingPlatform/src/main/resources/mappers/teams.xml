<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kosta.project.repository.TeamMapper">
	
	<!-- 팀 전체 순위 -->
<!-- 	<select id="selectTeamRankList" resultType="com.kosta.project.dto.TeamDTO">
		SELECT team_name AS teamName, team_rank AS teamRank, game_count AS gameCount, 
		win_count AS winCount, if(game_count = 0, 0, 100*(win_count/game_count)) AS odds,
		team_tier AS teamTier, team_score AS teamScore 
		FROM teams
		ORDER BY team_score DESC
	</select>
	
	팀 전체순위 [검색]
	<select id="selectSearchTeamRankList" resultType="com.kosta.project.dto.TeamDTO">
		SELECT team_name AS teamName, team_rank AS teamRank, game_count AS gameCount, 
		win_count AS winCount, if(game_count = 0, 0, 100*(win_count/game_count)) AS odds,
		team_tier AS teamTier, team_score AS teamScore 
		FROM teams
		WHERE team_name REGEXP #{search}
		ORDER BY team_score DESC;
	</select>
	
		
	<!-- 가입 가능 팀 목록 조회 -->
	<select id="selectPossibleJoinTeam" resultType="com.kosta.project.dto.TeamDTO">
		SELECT t.team_seq AS teamSeq, team_name AS teamName, possible_a AS possA, possible_b AS possB, 
		possible_c AS possC, possible_d AS possD, week_type AS weekType, week_time AS weekTime,
		hope_time AS hopeTime, hometown, COUNT(case when team_member_status=FALSE AND team_member_delete=FALSE
		then 1 END) AS memberCount
		FROM teams t, team_members m
		WHERE t.team_seq = m.team_seq AND recruitment = TRUE AND team_dismantle_status = FALSE
		GROUP BY m.team_seq;
	</select>
	
	가입 가능 팀 목록 조회 [검색]
	<select id="selectSearchPossibleTeam" resultType="com.kosta.project.dto.TeamDTO">
		SELECT t.team_seq AS teamSeq, team_name AS teamName, possible_a AS possA, possible_b AS possB, 
		possible_c AS possC, possible_d AS possD, week_type AS weekType, week_time AS weekTime,
		hope_time AS hopeTime, hometown, COUNT(case when team_member_status=FALSE AND team_member_delete=FALSE
		then 1 END) AS memberCount
		FROM teams t, team_members m
		WHERE t.team_seq = m.team_seq AND recruitment = TRUE AND team_dismantle_status = FALSE 
		AND team_name REGEXP #{search}
		GROUP BY m.team_seq;
	</select>
	
	
	팀 생성하기
	<insert id="insertTeam" parameterType="com.kosta.project.dto.TeamDTO">
		INSERT INTO teams(team_name, hometown, week_type, week_time, hope_time, content, team_score, team_tier, 
		game_count, win_count, possible_a, possible_b, possible_c, possible_d, 
		recruitment, team_dismantle_status, leader_id)
		VALUES(#{teamName}, #{hometown}, #{weekType}, #{weekTime}, #{hopeTime}, #{content}, 100, "D", 0, 0, #{possA},
		#{possB}, #{possC}, #{possD}, TRUE, FALSE, #{leaderID})
	</insert>
	
	<insert id="insertTeamMember">
		INSERT INTO team_members(user_id, join_date, team_member_status, team_member_delete,team_seq)
		VALUES (#{userId}, NOW(), FALSE, FALSE, #{teamSeq})
	</insert>
	
	<select id="selectTeamName" resultType="String">
		SELECT team_name FROM teams WHERE team_name = #{teamName}
	</select>
	
	
	팀 정보 불러오기 by 모달
	<select id="selectTeamInfoByModal" resultType="com.kosta.project.dto.TeamDTO">
		SELECT team_seq AS teamSeq, team_name AS teamName, game_count AS gameCount, win_count AS winCount, 
		if(game_count = 0, 0, 100*(win_count/game_count)) AS odds, NVL(team_rank, 0) AS teamRank, 
		team_tier AS teamTier, team_score AS teamScore, possible_a AS possA, possible_b AS possB, 
		possible_c AS possC, possible_d AS possD, week_type AS weekType, week_time AS weekTime, 
		hope_time AS hopeTime, hometown, content
		FROM teams 
		WHERE team_seq = #{teamSeq};
	</select>
	
	<select id="selectTeamMemberTierAndCount" resultType="Map">
		SELECT user_tier AS userTier, COUNT(u.user_id) AS tierCount
		FROM team_members m, users u
		WHERE m.team_seq = #{teamSeq} AND m.user_id = u.user_id AND team_member_status = FALSE AND team_member_delete = FALSE
		GROUP BY user_tier;
	</select>
	
	팀 가입 신청하기 & 가입신청 취소하기
	<insert id="insertTeamApply">
		INSERT INTO applys(user_id, apply_date, apply_status, close_status, team_seq)
		VALUES (#{userId}, NOW(), FALSE, FALSE, #{teamSeq});
	</insert>
	
	<delete id="deleteApplyByTeamSeq">
		DELETE FROM applys WHERE user_id = #{userId} AND team_seq = #{teamSeq};
	</delete>
	
	
	가입 신청된 목록 조회
	<select id="selectApplyTeamList" resultType="com.kosta.project.dto.TeamDTO">
		SELECT t.team_seq AS teamSeq,team_name AS teamName, possible_a AS possA, possible_b AS possB, possible_c AS possC, 
		possible_d AS possD, week_type AS weekType, week_time AS weekTime, hope_time AS hopeTime, hometown, 
		COUNT(case when team_member_status=FALSE AND team_member_delete=FALSE then 1 END) AS memberCountt
		FROM teams t, team_members m, applys a
		WHERE t.team_seq = m.team_seq AND a.team_seq = t.team_seq AND recruitment = TRUE
		AND a.user_id = #{userId} AND apply_status = FALSE AND close_status = FALSE;
	</select>

	
	팀원 모집 신청 받기 (신청 허가)
	<update id="updateApplyTeamMemberStatus">
		UPDATE applys SET apply_status = TRUE WHERE user_id = #{userId};
	</update>

	
	내 팀 정보 조회 (내 팀 정보 Btn)
	<select id="selectTeamInfo" resultType="com.kosta.project.dto.TeamDTO">
		SELECT team_seq AS teamSeq, team_name AS teamName, game_count AS gameCount, win_count AS winCount, 
		if(game_count = 0, 0, 100*(win_count/game_count)) AS odds, NVL(team_rank, 0) AS teamRank, team_tier AS teamTier,
		team_score AS teamScore, possible_a AS possA, possible_b AS possB, possible_c AS possC, 
		possible_d AS possD, week_type AS weekType, week_time AS weekTime, hope_time AS hopeTime, hometown, content
		FROM teams 
		WHERE team_seq = (SELECT team_seq FROM team_members WHERE user_id = #{userId} AND team_member_status = FALSE
		AND team_member_delete=FALSE);
	</select>
	
	
	팀원 팀나가기 & 팀원 강퇴하기
	<update id="updateTeamMemberStatus">
		UPDATE team_members SET team_member_status = TRUE WHERE user_id = #{userId};
	</update>

	<update id="updateTeamMemberDelete">
		UPDATE team_members SET team_member_delete = TRUE WHERE user_id = #{userId};
	</update>
	
	
	팀 추가 모집 하기
	<update id="updateTeamInfo" parameterType="com.kosta.project.dto.TeamDTO">
		UPDATE teams
		SET hometown = #{hometown}, week_type = #{weekType}, week_time = #{weekTime}, 
		hope_time= #{hopeTime}, possible_a = #{possA}, possible_b = #{possB}, 
		possible_c = #{possC}, possible_d = #{possD},
		content = #{content}, recruitment = TRUE
		WHERE team_seq = #{teamSeq};
	</update>
	
	
	추가모집 마감
	<update id="updateApplyTeamStatus">
		UPDATE applys SET close_status = TRUE WHERE team_seq = #{teamSeq};
	</update>

	<update id="updateTeamRecruitmentStatus">
		UPDATE teams SET recruitment = FALSE WHERE team_seq = #{teamSeq};
	</update>


	팀원 목록
	<select id="selectTeamMemberList" resultType="com.kosta.project.dto.TeamMemberDTO">
		SELECT nickname, birthday, gender, user_tier AS userTier, email
		FROM users u, team_members m
		WHERE u.user_id = m.user_id AND m.team_seq = #{teamSeq} AND 
		team_member_status = FALSE AND team_member_delete = FALSE;
	</select>


	팀장의 가입 신청 목록 조회
	<select id="selectApplyList" resultType="com.kosta.project.dto.TeamMemberDTO">
		SELECT a.user_id AS userId, nickname, birthday, gender, user_tier AS userTier, email
		FROM users u, applys a
		WHERE u.user_id = a.user_id AND a.team_seq = #{teamSeq}
		AND apply_status = FALSE AND close_status = FALSE;
	</select>


	<!-- 팀 원수 확인(팀해체, 팀매칭신청) -->
	<select id="selectTeamMemberCount" resultType="java.lang.Integer" parameterType="java.lang.String">
		SELECT COUNT(member_seq) 
		FROM team_members 
		WHERE team_seq = (SELECT team_seq FROM teams WHERE team_name = (SELECT team_name FROM teams WHERE leader_id = #{userId}))
		AND team_member_status = 0 
		AND team_member_delete = FALSE;
	</select>
	
	<update id="updateTeamDismantleStatus">
		UPDATE teams SET team_dismantle_status = TRUE WHERE team_seq = #{teamSeq};
	</update>
	
	
	<!-- 팀 시퀀스 가져오기(팀 매칭 신청 할 때), 팀장 여부 확인 할 때 -->
	<select id="selectTeamSeq" resultType="java.lang.Integer" parameterType="java.lang.String">
		SELECT team_seq as teamSeq FROM teams 
		WHERE leader_id = #{userId};
	</select>
	
	<!-- 팀원 리스트 조회(팀 매칭 신청 할 때 팀원 정지 여부 확인 위해) -->
	<select id="selectTeamMemberIds" resultType="String" parameterType="java.lang.String">
		SELECT user_id as userId FROM team_members
		WHERE team_seq = (SELECT team_seq FROM teams 
		WHERE team_name = (SELECT team_name FROM teams WHERE leader_id = #{userId}))
		AND team_member_status = 0;
	</select>
	
	<!-- 내 팀 정보 불러오기(마이페이지) -->
	<select id="selectTeamInfoByUserId" resultType="com.kosta.project.dto.TeamDTO">
	    SELECT
	      teams.team_name as teamName,
	      teams.team_rank as teamRank,
	      teams.team_tier as teamTier,
	      IFNULL(100 * (teams.win_count / teams.game_count), 0) AS winRate,  teams.team_score as teamScore
	    FROM teams
	    INNER JOIN team_members ON teams.team_seq = team_members.team_seq
	    WHERE team_members.user_id = #{userId}
	</select>

</mapper>
	
